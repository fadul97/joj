#include "joj/test/jtest_macros.h"
#include "joj/resources/gltf/gltf_importer.h"
#include "joj/resources/gltf/gltf_scene.h"
#include "joj/core/math/matrix4x4.h"
#include "joj/resources/submesh.h"
#include <vector>
#include <iostream>

JOJ_TEST(GLTFImporter_Sponza)
{
    const char* filename = "models/Sponza.gltf";
    joj::GLTFImporter model_importer;
    
    if (model_importer.load(filename) != joj::ErrorCode::OK)
        return;

    const joj::GLTFScene* scene = model_importer.get_scene();
    assert(scene != nullptr);
    assert(scene->get_submesh_count() == 103);

    // Hard coded data
    i32 vertex_start[] = { 0, 3175, 3708, 4939, 5692, 5820, 6380, 8244, 9952, 13144, 13160, 15024, 16196, 22564, 22780, 22992, 23130, 23256, 23378, 23504, 23626, 23752, 23874, 24000, 24122, 24248, 24370, 24496, 24618, 24744, 24866, 24992, 25114, 25240, 25362, 26242, 26298, 26858, 26924, 27238, 27286, 27384, 27432, 28120, 28212, 34116, 34208, 34215, 36039, 39803, 62841, 62877, 62997, 66949, 87936, 91196, 94456, 97716, 100976, 104236, 107496, 110756, 114016, 122356, 124971, 127480, 130095, 132710, 135219, 137834, 140343, 142958, 145467, 148082, 148098, 151055, 151071, 154028, 154044, 157001, 157017, 159974, 160507, 161738, 162271, 163502, 164035, 165266, 165716, 166947, 167397, 168628, 169078, 170309, 170759, 171990, 177298, 178164, 178917, 179783, 180536, 180586, 192476 };
    i32 vertex_count[] = { 3175, 533, 1231, 753, 128, 560, 1864, 1708, 3192, 16, 1864, 1172, 6368, 216, 212, 138, 126, 122, 126, 122, 126, 122, 126, 122, 126, 122, 126, 122, 126, 122, 126, 122, 126, 122, 880, 56, 560, 66, 314, 48, 98, 48, 688, 92, 5904, 92, 7, 1824, 3764, 23038, 36, 120, 3952, 20987, 3260, 3260, 3260, 3260, 3260, 3260, 3260, 3260, 8340, 2615, 2509, 2615, 2615, 2509, 2615, 2509, 2615, 2509, 2615, 16, 2957, 16, 2957, 16, 2957, 16, 2957, 533, 1231, 533, 1231, 533, 1231, 450, 1231, 450, 1231, 450, 1231, 450, 1231, 5308, 866, 753, 866, 753, 50, 11890, 20 };
    i32 index_start[] = { 0, 10920, 12324, 18957, 23043, 23367, 24207, 31203, 35571, 44259, 44307, 51303, 54591, 65631, 66243, 66855, 67299, 67779, 68115, 68595, 68931, 69411, 69747, 70227, 70563, 71043, 71379, 71859, 72195, 72675, 73011, 73491, 73827, 74307, 74643, 75963, 76059, 76899, 77061, 77787, 77859, 78105, 78177, 79845, 79995, 90219, 90369, 90384, 94464, 105672, 175296, 175350, 175542, 191910, 275298, 291810, 308322, 324834, 341346, 357858, 374370, 390882, 407394, 440514, 455106, 468930, 483522, 498114, 511938, 526530, 540354, 554946, 568770, 583362, 583386, 598257, 598281, 613152, 613176, 628047, 628071, 642942, 644346, 650979, 652383, 659016, 660420, 667053, 668253, 674886, 676086, 682719, 683919, 690552, 691752, 698385, 725937, 730500, 734586, 739149, 743235, 743319, 786771 };
    i32 index_count[] = { 10920, 1404, 6633, 4086, 324, 840, 6996, 4368, 8688, 48, 6996, 3288, 11040, 612, 612, 444, 480, 336, 480, 336, 480, 336, 480, 336, 480, 336, 480, 336, 480, 336, 480, 336, 480, 336, 1320, 96, 840, 162, 726, 72, 246, 72, 1668, 150, 10224, 150, 15, 4080, 11208, 69624, 54, 192, 16368, 83388, 16512, 16512, 16512, 16512, 16512, 16512, 16512, 16512, 33120, 14592, 13824, 14592, 14592, 13824, 14592, 13824, 14592, 13824, 14592, 24, 14871, 24, 14871, 24, 14871, 24, 14871, 1404, 6633, 1404, 6633, 1404, 6633, 1200, 6633, 1200, 6633, 1200, 6633, 1200, 6633, 27552, 4563, 4086, 4563, 4086, 84, 43452, 30 };

    i32 i = 0;
    for (const auto& submesh : scene->get_submeshes())
    {
        // assert(submesh.local_transform == joj::Matrix4x4::identity());
        // assert(submesh.name == "Submesh " + std::to_string(&submesh - &submeshes[0] + 1));
        assert(submesh.vertex_start == vertex_start[i]);
        assert(submesh.vertex_count == vertex_count[i]);
        assert(submesh.index_start == index_start[i]);
        assert(submesh.index_count == index_count[i]);
        ++i;
    }
}

int main()
{
    joj::JTestSuite::instance().run();
    return 0;
}